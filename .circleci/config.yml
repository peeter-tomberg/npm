aliases:
  default: &default
    docker:
      - image: circleci/node:latest

  install_token: &install_token
    run:
      name: 'Setting NPM token'
      command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > $HOME/.npmrc

  install_deps: &install_deps
    run:
      name: 'Installing dependencies'
      command: npm ci

version: 2
jobs:
  dependencies:
    <<: *default
    steps:
      - checkout
      - *install_token
      - *install_deps
      - run:
          name: Installing dependencies on all packages
          command: npx lerna exec -- npm ci
      - persist_to_workspace:
          root: ./
          paths:
            - packages/*/node_modules
            - node_modules

  build:
    <<: *default
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Linking all packages together
          command: npx lerna link
      - run:
          name: Building all packages
          command: npm run build
      - persist_to_workspace:
          root: ./
          paths:
            - packages/*/lib

  lint:
    <<: *default
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run: npm run lint

  test:
    <<: *default
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run: npm run test

  semantic_release:
    <<: *default
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - *install_token
      - run: npm run publish

workflows:
  version: 2
  pull-request:
    jobs:
      - dependencies:
          context: npm-packages
          filters:
            branches:
              ignore:
                - master
      - build:
          context: npm-packages
          filters:
            branches:
              ignore:
                - master
          requires:
            - dependencies
      - lint:
          context: npm-packages
          filters:
            branches:
              ignore:
                - master
          requires:
            - dependencies
      - test:
          context: npm-packages
          filters:
            branches:
              ignore:
                - master
          requires:
            - build

  build-master:
    jobs:
      - dependencies:
          context: npm-packages
          filters:
            branches:
              only:
                - master
      - build:
          context: npm-packages
          filters:
            branches:
              only:
                - master
          requires:
            - dependencies

      - lint:
          context: npm-packages
          filters:
            branches:
              only:
                - master
          requires:
            - dependencies
      - test:
          context: npm-packages
          filters:
            branches:
              only:
                - master
          requires:
            - build

      - semantic_release:
          context: npm-packages
          filters:
            branches:
              only: master
          requires:
            - build
            - lint
            - test